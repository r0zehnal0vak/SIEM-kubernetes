---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco-falcosidekick
  namespace: monitoring
---
# Source: falco/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falco
  namespace: monitoring
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: falco/charts/falcosidekick/templates/secrets-ui.yaml
apiVersion: v1
kind: Secret
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
type: Opaque
data:
  FALCOSIDEKICK_UI_USER: "YWRtaW46YWRtaW4="
---
# Source: falco/charts/falcosidekick/templates/secrets-ui.yaml
apiVersion: v1
kind: Secret
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
type: Opaque
data: {}
---
# Source: falco/charts/falcosidekick/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: falco-falcosidekick
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  annotations: {}
type: Opaque
data:
  # Slack Output
  SLACK_WEBHOOKURL: ""
  SLACK_CHANNEL: ""
  SLACK_OUTPUTFORMAT: "YWxs"
  SLACK_FOOTER: ""
  SLACK_ICON: ""
  SLACK_USERNAME: ""
  SLACK_MINIMUMPRIORITY: ""
  SLACK_MESSAGEFORMAT: ""

  # RocketChat Output
  ROCKETCHAT_WEBHOOKURL: ""
  ROCKETCHAT_OUTPUTFORMAT: "YWxs"
  ROCKETCHAT_ICON: ""
  ROCKETCHAT_USERNAME: ""
  ROCKETCHAT_MINIMUMPRIORITY: ""
  ROCKETCHAT_MESSAGEFORMAT: ""
  ROCKETCHAT_MUTUALTLS: "ZmFsc2U="
  ROCKETCHAT_CHECKCERT: "dHJ1ZQ=="

  # Mattermost Output
  MATTERMOST_WEBHOOKURL: ""
  MATTERMOST_OUTPUTFORMAT: "YWxs"
  MATTERMOST_FOOTER: ""
  MATTERMOST_ICON: ""
  MATTERMOST_USERNAME: ""
  MATTERMOST_MINIMUMPRIORITY: ""
  MATTERMOST_MESSAGEFORMAT: ""
  MATTERMOST_MUTUALTLS: "ZmFsc2U="
  MATTERMOST_CHECKCERT: "dHJ1ZQ=="

  # Teams Output
  TEAMS_WEBHOOKURL: ""
  TEAMS_OUTPUTFORMAT: "YWxs"
  TEAMS_ACTIVITYIMAGE: ""
  TEAMS_MINIMUMPRIORITY: ""

  # Datadog (Events) Output
  DATADOG_APIKEY: ""
  DATADOG_HOST: ""
  DATADOG_MINIMUMPRIORITY: ""

  # Datadog Logs Output
  DATADOGLOGS_APIKEY: ""
  DATADOGLOGS_HOST: ""
  DATADOGLOGS_SERVICE: ""
  DATADOGLOGS_MINIMUMPRIORITY: ""

  # AlertManager Output
  ALERTMANAGER_HOSTPORT: ""
  ALERTMANAGER_ENDPOINT: "L2FwaS92MS9hbGVydHM="
  ALERTMANAGER_EXPIRESAFTER: ""
  ALERTMANAGER_DROPEVENTDEFAULTPRIORITY: "Y3JpdGljYWw="
  ALERTMANAGER_DROPEVENTTHRESHOLDS: "MTAwMDA6Y3JpdGljYWwsIDEwMDA6Y3JpdGljYWwsIDEwMDpjcml0aWNhbCwgMTA6d2FybmluZywgMTp3YXJuaW5n"
  ALERTMANAGER_MINIMUMPRIORITY: ""
  ALERTMANAGER_MUTUALTLS: "ZmFsc2U="
  ALERTMANAGER_CHECKCERT: "dHJ1ZQ=="

  # InfluxDB Output
  INFLUXDB_USER: ""
  INFLUXDB_PASSWORD: ""
  INFLUXDB_TOKEN: ""
  INFLUXDB_HOSTPORT: ""
  INFLUXDB_ORGANIZATION: ""
  INFLUXDB_PRECISION: "bnM="
  INFLUXDB_MINIMUMPRIORITY: ""
  INFLUXDB_DATABASE: "ZmFsY28="
  INFLUXDB_MUTUALTLS: "ZmFsc2U="
  INFLUXDB_CHECKCERT: "dHJ1ZQ=="

  # AWS Output
  AWS_ACCESSKEYID: ""
  AWS_SECRETACCESSKEY: ""
  AWS_REGION: ""
  AWS_CHECKIDENTITY: "dHJ1ZQ=="
  AWS_LAMBDA_FUNCTIONNAME: ""
  AWS_LAMBDA_MINIMUMPRIORITY: ""
  AWS_CLOUDWATCHLOGS_LOGGROUP: ""
  AWS_CLOUDWATCHLOGS_LOGSTREAM: ""
  AWS_CLOUDWATCHLOGS_MINIMUMPRIORITY: ""
  AWS_SNS_TOPICARN: ""
  AWS_SNS_RAWJSON: "ZmFsc2U="
  AWS_SNS_MINIMUMPRIORITY: ""
  AWS_SQS_URL: ""
  AWS_SQS_MINIMUMPRIORITY: ""
  AWS_S3_BUCKET: ""
  AWS_S3_PREFIX: ""
  AWS_S3_ENDPOINT: ""
  AWS_S3_OBJECTCANNEDACL: "YnVja2V0LW93bmVyLWZ1bGwtY29udHJvbA=="
  AWS_S3_MINIMUMPRIORITY: ""
  AWS_KINESIS_STREAMNAME: ""
  AWS_KINESIS_MINIMUMPRIORITY: ""
  AWS_SECURITYLAKE_BUCKET: ""
  AWS_SECURITYLAKE_REGION: ""
  AWS_SECURITYLAKE_PREFIX: ""
  AWS_SECURITYLAKE_ACCOUNTID: ""
  AWS_SECURITYLAKE_INTERVAL: "NQ=="
  AWS_SECURITYLAKE_BATCHSIZE: "MTAwMA=="
  AWS_SECURITYLAKE_MINIMUMPRIORITY: ""

  # SMTP Output
  SMTP_USER: ""
  SMTP_PASSWORD: ""
  SMTP_AUTHMECHANISM: "cGxhaW4="
  SMTP_TLS: "dHJ1ZQ=="
  SMTP_HOSTPORT: ""
  SMTP_FROM: ""
  SMTP_TO: ""
  SMTP_TOKEN: ""
  SMTP_IDENTITY: ""
  SMTP_TRACE: ""
  SMTP_OUTPUTFORMAT: "aHRtbA=="
  SMTP_MINIMUMPRIORITY: ""

  # OpsGenie Output
  OPSGENIE_APIKEY: ""
  OPSGENIE_REGION: ""
  OPSGENIE_MINIMUMPRIORITY: ""
  OPSGENIE_MUTUALTLS: "ZmFsc2U="
  OPSGENIE_CHECKCERT: "dHJ1ZQ=="

  # Discord Output
  DISCORD_WEBHOOKURL: ""
  DISCORD_ICON: ""
  DISCORD_MINIMUMPRIORITY: ""

  # GCP Output
  GCP_CREDENTIALS: ""
  GCP_PUBSUB_PROJECTID: ""
  GCP_PUBSUB_TOPIC: ""
  GCP_PUBSUB_CUSTOMATTRIBUTES: ""
  GCP_PUBSUB_MINIMUMPRIORITY: ""
  GCP_STORAGE_BUCKET: ""
  GCP_STORAGE_PREFIX: ""
  GCP_STORAGE_MINIMUMPRIORITY: "ZGVidWc="
  GCP_CLOUDFUNCTIONS_NAME: ""
  GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY: ""
  GCP_CLOUDRUN_ENDPOINT: ""
  GCP_CLOUDRUN_JWT: ""
  GCP_CLOUDRUN_MINIMUMPRIORITY: ""

  # GoogleChat Output
  GOOGLECHAT_WEBHOOKURL: ""
  GOOGLECHAT_OUTPUTFORMAT: "YWxs"
  GOOGLECHAT_MINIMUMPRIORITY: ""
  GOOGLECHAT_MESSAGEFORMAT: ""

  # ElasticSearch Output
  ELASTICSEARCH_HOSTPORT: ""
  ELASTICSEARCH_INDEX: "ZmFsY28="
  ELASTICSEARCH_TYPE: "X2RvYw=="
  ELASTICSEARCH_PIPELINE: ""
  ELASTICSEARCH_SUFFIX: "ZGFpbHk="
  ELASTICSEARCH_APIKEY: ""
  ELASTICSEARCH_USERNAME: ""
  ELASTICSEARCH_PASSWORD: ""
  ELASTICSEARCH_FLATTENFIELDS: "ZmFsc2U="
  ELASTICSEARCH_CREATEINDEXTEMPLATE: "ZmFsc2U="
  ELASTICSEARCH_ENABLECOMPRESSION: "ZmFsc2U="
  ELASTICSEARCH_MAXCONCURRENTREQUESTS: "MQ=="
  ELASTICSEARCH_BATCHING_ENABLED: "dHJ1ZQ=="
  ELASTICSEARCH_BATCHING_BATCHSIZE: "NTI0Mjg4MA=="
  ELASTICSEARCH_BATCHING_FLUSHINTERVAL: "MXM="
  ELASTICSEARCH_NUMBEROFSHARDS: "Mw=="
  ELASTICSEARCH_NUMBEROFREPLICAS: "Mw=="
  ELASTICSEARCH_CUSTOMHEADERS: ""
  ELASTICSEARCH_MUTUALTLS: "ZmFsc2U="
  ELASTICSEARCH_CHECKCERT: "dHJ1ZQ=="
  ELASTICSEARCH_MINIMUMPRIORITY: ""

  # Loki Output
  LOKI_HOSTPORT: ""
  LOKI_ENDPOINT: "L2xva2kvYXBpL3YxL3B1c2g="
  LOKI_USER: ""
  LOKI_APIKEY: ""
  LOKI_TENANT: ""
  LOKI_FORMAT: "dGV4dA=="
  LOKI_EXTRALABELS: ""
  LOKI_CUSTOMHEADERS: ""
  LOKI_MINIMUMPRIORITY: ""
  LOKI_MUTUALTLS: "ZmFsc2U="
  LOKI_CHECKCERT: "dHJ1ZQ=="

  # Prometheus Output
  PROMETHEUS_EXTRALABELS: ""

  # Nats Output
  NATS_HOSTPORT: ""
  NATS_SUBJECTTEMPLATE: "ZmFsY28uPHByaW9yaXR5Pi48cnVsZT4="
  NATS_MINIMUMPRIORITY: ""
  NATS_MUTUALTLS: "ZmFsc2U="
  NATS_CHECKCERT: "dHJ1ZQ=="

  # Stan Output
  STAN_HOSTPORT: ""
  STAN_CLUSTERID: ""
  STAN_CLIENTID: ""
  STAN_SUBJECTTEMPLATE: "ZmFsY28uPHByaW9yaXR5Pi48cnVsZT4="
  STAN_MINIMUMPRIORITY: ""
  STAN_MUTUALTLS: "ZmFsc2U="
  STAN_CHECKCERT: "dHJ1ZQ=="

  # Statsd Output
  STATSD_FORWARDER: ""
  STATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="

  # Dogstatsd Output
  DOGSTATSD_FORWARDER: ""
  DOGSTATSD_NAMESPACE: "ZmFsY29zaWRla2ljay4="
  DOGSTATSD_TAGS: ""

  # WebHook Output
  WEBHOOK_ADDRESS: ""
  WEBHOOK_METHOD: "UE9TVA=="
  WEBHOOK_CUSTOMHEADERS: ""
  WEBHOOK_MINIMUMPRIORITY: ""
  WEBHOOK_MUTUALTLS: "ZmFsc2U="
  WEBHOOK_CHECKCERT: "dHJ1ZQ=="

  # Azure Output
  AZURE_EVENTHUB_NAME: ""
  AZURE_EVENTHUB_NAMESPACE: ""
  AZURE_EVENTHUB_MINIMUMPRIORITY: ""

  # Kafka Output
  KAFKA_HOSTPORT: ""
  KAFKA_TOPIC: ""
  KAFKA_SASL: ""
  KAFKA_TLS: "ZmFsc2U="
  KAFKA_USERNAME: ""
  KAFKA_PASSWORD: ""
  KAFKA_ASYNC: "ZmFsc2U="
  KAFKA_REQUIREDACKS: "Tk9ORQ=="
  KAFKA_COMPRESSION: "Tk9ORQ=="
  KAFKA_BALANCER: "cm91bmRfcm9iaW4="
  KAFKA_TOPICCREATION: "ZmFsc2U="
  KAFKA_CLIENTID: ""
  KAFKA_MINIMUMPRIORITY: ""

  # PagerDuty Output
  PAGERDUTY_ROUTINGKEY: ""
  PAGERDUTY_REGION: "dXM="
  PAGERDUTY_MINIMUMPRIORITY: ""

  # Kubeless Output
  KUBELESS_FUNCTION: ""
  KUBELESS_NAMESPACE: ""
  KUBELESS_PORT: "ODA4MA=="
  KUBELESS_MINIMUMPRIORITY: ""
  KUBELESS_MUTUALTLS: "ZmFsc2U="
  KUBELESS_CHECKCERT: "dHJ1ZQ=="

  # OpenFaaS Output
  OPENFAAS_GATEWAYNAMESPACE: "b3BlbmZhYXM="
  OPENFAAS_GATEWAYSERVICE: "Z2F0ZXdheQ=="
  OPENFAAS_FUNCTIONNAME: ""
  OPENFAAS_FUNCTIONNAMESPACE: "b3BlbmZhYXMtZm4="
  OPENFAAS_GATEWAYPORT: "ODA4MA=="
  OPENFAAS_MINIMUMPRIORITY: ""
  OPENFAAS_MUTUALTLS: "ZmFsc2U="
  OPENFAAS_CHECKCERT: "dHJ1ZQ=="

  # Cloud Events Output
  CLOUDEVENTS_ADDRESS: ""
  CLOUDEVENTS_EXTENSION: ""
  CLOUDEVENTS_MINIMUMPRIORITY: ""

  # RabbitMQ Output
  RABBITMQ_URL: ""
  RABBITMQ_QUEUE: ""
  RABBITMQ_MINIMUMPRIORITY: "ZGVidWc="

  # Wavefront Output
  WAVEFRONT_ENDPOINTTYPE: ""
  WAVEFRONT_ENDPOINTHOST: ""
  WAVEFRONT_ENDPOINTTOKEN: ""
  WAVEFRONT_ENDPOINTMETRICPORT: "Mjg3OA=="
  WAVEFRONT_FLUSHINTERVALSECONDS: "MQ=="
  WAVEFRONT_BATCHSIZE: "MTAwMDA="
  WAVEFRONT_METRICNAME: "ZmFsY28uYWxlcnQ="
  WAVEFRONT_MINIMUMPRIORITY: "ZGVidWc="

  # Grafana Output
  GRAFANA_HOSTPORT: ""
  GRAFANA_APIKEY: ""
  GRAFANA_DASHBOARDID: ""
  GRAFANA_PANELID: ""
  GRAFANA_ALLFIELDSASTAGS: "ZmFsc2U="
  GRAFANA_CUSTOMHEADERS: ""
  GRAFANA_MUTUALTLS: "ZmFsc2U="
  GRAFANA_CHECKCERT: "dHJ1ZQ=="
  GRAFANA_MINIMUMPRIORITY: ""

  # Grafana On Call Output
  GRAFANAONCALL_WEBHOOKURL: ""
  GRAFANAONCALL_CUSTOMHEADERS: ""
  GRAFANAONCALL_CHECKCERT: "dHJ1ZQ=="
  GRAFANAONCALL_MUTUALTLS: "ZmFsc2U="
  GRAFANAONCALL_MINIMUMPRIORITY: ""

  # Fission Output
  FISSION_FUNCTION: ""
  FISSION_ROUTERNAMESPACE: "Zmlzc2lvbg=="
  FISSION_ROUTERSERVICE: "cm91dGVy"
  FISSION_ROUTERPORT: "ODA="
  FISSION_MINIMUMPRIORITY: ""
  FISSION_MUTUALTLS: "ZmFsc2U="
  FISSION_CHECKCERT: "dHJ1ZQ=="

  # Yandex Output
  YANDEX_ACCESSKEYID:  ""
  YANDEX_SECRETACCESSKEY: ""
  YANDEX_REGION: ""
  YANDEX_S3_ENDPOINT: ""
  YANDEX_S3_BUCKET: ""
  YANDEX_S3_PREFIX: ""
  YANDEX_S3_MINIMUMPRIORITY: ""
  YANDEX_DATASTREAMS_ENDPOINT: ""
  YANDEX_DATASTREAMS_STREAMNAME: ""
  YANDEX_DATASTREAMS_MINIMUMPRIORITY: ""

  # KafkaRest Output
  KAFKAREST_ADDRESS: ""
  KAFKAREST_VERSION: "Mg=="
  KAFKAREST_MINIMUMPRIORITY: ""
  KAFKAREST_MUTUALTLS: "ZmFsc2U="
  KAFKAREST_CHECKCERT: "dHJ1ZQ=="

  # Syslog Output
  SYSLOG_HOST: ""
  SYSLOG_PORT: ""
  SYSLOG_PROTOCOL: "dGNw"
  SYSLOG_FORMAT: "anNvbg=="
  SYSLOG_MINIMUMPRIORITY: ""

  # Zoho Cliq Output
  CLIQ_WEBHOOKURL: ""
  CLIQ_ICON: ""
  CLIQ_USEEMOJI: "dHJ1ZQ=="
  CLIQ_OUTPUTFORMAT: "YWxs"
  CLIQ_MESSAGEFORMAT: ""
  CLIQ_MINIMUMPRIORITY: ""

  # Policy Reporter Output
  POLICYREPORT_ENABLED: "ZmFsc2U="
  POLICYREPORT_KUBECONFIG: "fi8ua3ViZS9jb25maWc="
  POLICYREPORT_MAXEVENTS: "MTAwMA=="
  POLICYREPORT_PRUNEBYPRIORITY: "ZmFsc2U="
  POLICYREPORT_MINIMUMPRIORITY: ""

  # Node Red Output
  NODERED_ADDRESS: ""
  NODERED_USER: ""
  NODERED_PASSWORD: ""
  NODERED_CUSTOMHEADERS: ""
  NODERED_CHECKCERT: "dHJ1ZQ=="
  NODERED_MINIMUMPRIORITY: ""

  # MQTT Output
  MQTT_BROKER: ""
  MQTT_TOPIC: "ZmFsY28vZXZlbnRz"
  MQTT_QOS: "MA=="
  MQTT_RETAINED: "ZmFsc2U="
  MQTT_USER: ""
  MQTT_PASSWORD: ""
  MQTT_CHECKCERT: "dHJ1ZQ=="
  MQTT_MINIMUMPRIORITY: ""

  # Zincsearch Output
  ZINCSEARCH_HOSTPORT: ""
  ZINCSEARCH_INDEX: "ZmFsY28="
  ZINCSEARCH_USERNAME: ""
  ZINCSEARCH_PASSWORD: ""
  ZINCSEARCH_CHECKCERT: "dHJ1ZQ=="
  ZINCSEARCH_MINIMUMPRIORITY: ""

  # Gotify Output
  GOTIFY_HOSTPORT: ""
  GOTIFY_TOKEN: ""
  GOTIFY_FORMAT: "bWFya2Rvd24="
  GOTIFY_CHECKCERT: "dHJ1ZQ=="
  GOTIFY_MINIMUMPRIORITY: ""

  # Tekton Output
  TEKTON_EVENTLISTENER: ""
  TEKTON_CHECKCERT: "dHJ1ZQ=="
  TEKTON_MINIMUMPRIORITY: ""

  # Spyderbat Output
  SPYDERBAT_ORGUID: ""
  SPYDERBAT_APIKEY: ""
  SPYDERBAT_APIURL: "aHR0cHM6Ly9hcGkuc3B5ZGVyYmF0LmNvbQ=="
  SPYDERBAT_SOURCE: "ZmFsY29zaWRla2ljaw=="
  SPYDERBAT_SOURCEDESCRIPTION: ""
  SPYDERBAT_MINIMUMPRIORITY: ""

  # TimescaleDB Output
  TIMESCALEDB_HOST: ""
  TIMESCALEDB_PORT: "NTQzMg=="
  TIMESCALEDB_USER: "cG9zdGdyZXM="
  TIMESCALEDB_PASSWORD: "cG9zdGdyZXM="
  TIMESCALEDB_DATABASE: ""
  TIMESCALEDB_HYPERTABLENAME: "ZmFsY29fZXZlbnRz"
  TIMESCALEDB_MINIMUMPRIORITY: ""

  # Redis Output
  REDIS_ADDRESS: ""
  REDIS_PASSWORD: ""
  REDIS_DATABASE: "MA=="
  REDIS_KEY: "ZmFsY28="
  REDIS_STORAGETYPE: "bGlzdA=="
  REDIS_MINIMUMPRIORITY: ""

  # TELEGRAM Output
  TELEGRAM_TOKEN: ""
  TELEGRAM_CHATID: ""
  TELEGRAM_MESSAGE_THREAD_ID: ""
  TELEGRAM_MINIMUMPRIORITY: ""
  TELEGRAM_CHECKCERT: "dHJ1ZQ=="

  # N8N Output
  N8N_ADDRESS: ""
  N8N_USER: ""
  N8N_PASSWORD: ""
  N8N_MINIMUMPRIORITY: ""
  N8N_CHECKCERT: "dHJ1ZQ=="

  # Open Observe Output
  OPENOBSERVE_HOSTPORT: ""
  OPENOBSERVE_USERNAME: ""
  OPENOBSERVE_PASSWORD: ""
  OPENOBSERVE_CHECKCERT: "dHJ1ZQ=="
  OPENOBSERVE_MUTUALTLS: "ZmFsc2U="
  OPENOBSERVE_CUSTOMHEADERS: ""
  OPENOBSERVE_ORGANIZATIONNAME: "ZGVmYXVsdA=="
  OPENOBSERVE_STREAMNAME: "ZmFsY28="
  OPENOBSERVE_MINIMUMPRIORITY: ""

  # Dynatrace Output
  DYNATRACE_APITOKEN: ""
  DYNATRACE_APIURL: ""
  DYNATRACE_CHECKCERT: "dHJ1ZQ=="
  DYNATRACE_MINIMUMPRIORITY: ""

  # OTLP Traces Output
  OTLP_TRACES_ENDPOINT: ""
  OTLP_TRACES_PROTOCOL: ""
  OTLP_TRACES_TIMEOUT: "MTAwMA=="
  OTLP_TRACES_HEADERS: ""
  OTLP_TRACES_SYNCED: "ZmFsc2U="
  OTLP_TRACES_DURATION: "MTAwMA=="
  OTLP_TRACES_CHECKCERT: "dHJ1ZQ=="
  OTLP_TRACES_MINIMUMPRIORITY: ""
  # OTLP Metrics Output
  OTLP_METRICS_ENDPOINT: ""
  OTLP_METRICS_PROTOCOL: "Z3JwYw=="
  OTLP_METRICS_TIMEOUT: "MTAwMA=="
  OTLP_METRICS_HEADERS: ""
  OTLP_METRICS_EXTRAATTRIBUTES: ""
  OTLP_METRICS_CHECKCERT: "dHJ1ZQ=="
  OTLP_METRICS_MINIMUMPRIORITY: ""

  # Sumologic Output
  SUMOLOGIC_RECEIVERURL: ""
  SUMOLOGIC_SOURCECATEGORY: ""
  SUMOLOGIC_SOURCEHOST: ""
  SUMOLOGIC_NAME: ""
  SUMOLOGIC_CHECKCERT: "dHJ1ZQ=="
  SUMOLOGIC_MINIMUMPRIORITY: ""

  # Quickwit Output
  QUICKWIT_HOSTPORT: ""
  QUICKWIT_APIENDPOINT: "L2FwaS92MQ=="
  QUICKWIT_INDEX: "ZmFsY28="
  QUICKWIT_AUTOCREATEINDEX: "ZmFsc2U="
  QUICKWIT_CUSTOMHEADERS: ""
  QUICKWIT_VERSION: "MC43"
  QUICKWIT_CHECKCERT: "dHJ1ZQ=="
  QUICKWIT_MUTUALTLS: "ZmFsc2U="
  QUICKWIT_MINIMUMPRIORITY: ""

  # Webex Output
  WEBEX_WEBHOOKURL: ""
  WEBEX_MINIMUMPRIORITY: ""

  # Talon Output
  TALON_ADDRESS: ""
  TALON_CHECKCERT: "dHJ1ZQ=="
  TALON_MINIMUMPRIORITY: ""
  
  # WebUI Output
  WEBUI_URL: "aHR0cDovL2ZhbGNvLWZhbGNvc2lkZWtpY2stdWk6MjgwMg=="
---
# Source: falco/charts/falcosidekick/templates/configmap-ui.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui-redis
data:
  ping-redis.sh: |-
    #!/bin/bash
    for i in {1..10};
    do
      response=$(
        timeout -s 3 30 \
        redis-cli \
          -h falco-falcosidekick-ui-redis -p 6379 \
          ping
        )
      if [ "$response" = "PONG" ]; then
        exit 0
      fi
      sleep 3
    done
    exit 1
---
# Source: falco/charts/falcosidekick/templates/falcosidekick-loki-dashboard-grafana.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falcosidekick-loki-dashboard-grafana
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
data:
  falcosidekick-loki-dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "sum"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.2.0",
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "${datasource}"
              },
              "editorMode": "code",
              "expr": "count by(priority) (rate({priority=~\".+\"} | logfmt | k8s_ns =~ `$namespace` [$__auto]))",
              "legendFormat": "{{ .Values.falco.priority }}",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "Priority counts",
          "type": "piechart"
        },
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": []
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 2,
          "options": {
            "displayLabels": [
              "value",
              "percent"
            ],
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true,
              "values": []
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "sum"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.2.0",
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "${datasource}"
              },
              "editorMode": "code",
              "expr": "count by(rule) (rate({priority=~\".+\", rule!=\"Falco internal: metrics snapshot\"} | logfmt | k8s_ns =~ `$namespace` [$__auto]))",
              "legendFormat": "{{ .Values.falco.priority }}",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "Rules counts",
          "type": "piechart"
        },
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "left",
                "cellOptions": {
                  "type": "auto",
                  "wrapText": false
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Value #A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Number of Messages"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Time"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "k8s_ns"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 96
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "priority"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 91
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "rule"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 450
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 5,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "enablePagination": false,
              "fields": "",
              "reducer": [
                "last"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "11.2.0",
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "${datasource}"
              },
              "editorMode": "builder",
              "expr": "count by(k8s_pod_name, rule, priority, k8s_ns) (rate({priority=~\".+\"} | logfmt | k8s_ns =~ `$namespace` [$__auto]))",
              "legendFormat": "",
              "queryType": "instant",
              "refId": "A"
            }
          ],
          "transformations": [
            {
              "id": "sortBy",
              "options": {
                "fields": {},
                "sort": [
                  {
                    "desc": true,
                    "field": "Value #A"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "id": 6,
          "options": {
            "dedupStrategy": "none",
            "enableLogDetails": true,
            "prettifyLogMessage": false,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": false,
            "sortOrder": "Descending",
            "wrapLogMessage": false
          },
          "pluginVersion": "11.2.0",
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "${datasource}"
              },
              "direction": "backward",
              "editorMode": "builder",
              "expr": "{priority=~\".+\"} | logfmt | k8s_ns =~ `$namespace`",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "Realtime logs",
          "type": "logs"
        },
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "stepBefore",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 23
          },
          "id": 7,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "loki"
              },
              "editorMode": "builder",
              "expr": "count by(priority) (rate({priority=~\".+\"} | logfmt | k8s_ns =~ `$namespace` [1m]))",
              "legendFormat": "{{ .Values.falco.priority }}",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "Priorities Rates",
          "type": "timeseries"
        },
        {
          "datasource": {
            "default": false,
            "type": "loki",
            "uid": "${datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 100,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "stepBefore",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 4,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "fieldMinMax": false,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 23
          },
          "id": 8,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "loki"
              },
              "editorMode": "builder",
              "expr": "count by(rule) (rate({priority=~\".+\"} | logfmt | k8s_ns =~ `$namespace` [1m]))",
              "legendFormat": "{{ .Values.falco.priority }}",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "Rules Rates",
          "type": "timeseries"
        }
      ],
      "refresh": "auto",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": "",
            "current": {
              "selected": true,
              "text": [
                "arr",
                "core",
                "falco",
                "kube-system",
                "media",
                "monitoring",
                "storage",
                "utilities",
                "webs"
              ],
              "value": [
                "arr",
                "core",
                "falco",
                "kube-system",
                "media",
                "monitoring",
                "storage",
                "utilities",
                "webs"
              ]
            },
            "datasource": {
              "type": "loki",
              "uid": "${datasource}"
            },
            "definition": "",
            "description": "",
            "hide": 0,
            "includeAll": false,
            "label": "namespace",
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "label": "namespace",
              "refId": "LokiVariableQueryEditor-VariableQuery",
              "stream": "",
              "type": 1
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "current": {
              "selected": true,
              "text": "Loki",
              "value": "loki"
            },
            "hide": 0,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "datasource",
            "options": [],
            "query": "loki",
            "queryValue": "",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "browser",
      "title": "Falco logs",
      "uid": "de6ixj4nl1kowc",
      "version": 3,
      "weekStart": ""
    }
---
# Source: falco/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco
  namespace: monitoring
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
data:
  falco.yaml: |-
    append_output: []
    base_syscalls:
      custom_set: []
      repair: false
    buffered_outputs: false
    config_files:
    - /etc/falco/config.d
    container_engines:
      bpm:
        enabled: false
      cri:
        enabled: true
        sockets:
        - /run/containerd/containerd.sock
        - /run/crio/crio.sock
      docker:
        enabled: true
      libvirt_lxc:
        enabled: false
      lxc:
        enabled: false
      podman:
        enabled: false
    engine:
      ebpf:
        buf_size_preset: 4
        drop_failed_exit: false
        probe: ${HOME}/.falco/falco-bpf.o
      kind: modern_ebpf
      kmod:
        buf_size_preset: 4
        drop_failed_exit: false
      modern_ebpf:
        buf_size_preset: 4
        cpus_for_each_buffer: 2
        drop_failed_exit: false
    falco_libs:
      thread_table_size: 262144
    file_output:
      enabled: false
      filename: ./events.txt
      keep_alive: false
    grpc:
      bind_address: unix:///run/falco/falco.sock
      enabled: false
      threadiness: 0
    grpc_output:
      enabled: false
    http_output:
      ca_bundle: ""
      ca_cert: ""
      ca_path: /etc/falco/certs/
      client_cert: /etc/falco/certs/client/client.crt
      client_key: /etc/falco/certs/client/client.key
      compress_uploads: false
      echo: false
      enabled: true
      insecure: false
      keep_alive: false
      mtls: false
      url: http://falco-falcosidekick:2801
      user_agent: falcosecurity/falco
    json_include_message_property: false
    json_include_output_property: true
    json_include_tags_property: true
    json_output: true
    libs_logger:
      enabled: false
      severity: debug
    load_plugins: []
    log_level: info
    log_stderr: true
    log_syslog: true
    metrics:
      convert_memory_to_mb: true
      enabled: true
      include_empty_values: false
      interval: 1h
      kernel_event_counters_enabled: true
      kernel_event_counters_per_cpu_enabled: false
      libbpf_stats_enabled: true
      output_rule: true
      resource_utilization_enabled: true
      rules_counters_enabled: true
      state_counters_enabled: true
    output_timeout: 2000
    outputs_queue:
      capacity: 0
    plugins:
    - init_config: null
      library_path: libk8saudit.so
      name: k8saudit
      open_params: http://:9765/k8s-audit
    - library_path: libcloudtrail.so
      name: cloudtrail
    - init_config: ""
      library_path: libjson.so
      name: json
    priority: debug
    program_output:
      enabled: false
      keep_alive: false
      program: 'jq ''{text: .output}'' | curl -d @- -X POST https://hooks.slack.com/services/XXX'
    rule_matching: first
    rules_files:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d
    stdout_output:
      enabled: true
    syscall_event_drops:
      actions:
      - log
      - alert
      max_burst: 1
      rate: 0.03333
      simulate_drops: false
      threshold: 0.1
    syscall_event_timeouts:
      max_consecutives: 1000
    syslog_output:
      enabled: true
    time_format_iso_8601: false
    watch_config_files: true
    webserver:
      enabled: true
      k8s_healthz_endpoint: /healthz
      listen_port: 8765
      prometheus_metrics_enabled: true
      ssl_certificate: /etc/falco/falco.pem
      ssl_enabled: false
      threadiness: 0
---
# Source: falco/templates/falcoctl-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-falcoctl
  namespace: monitoring
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
data:
  falcoctl.yaml: |-
    artifact:
      allowedTypes:
      - rulesfile
      - plugin
      follow:
        every: 6h
        falcoversions: http://localhost:8765/versions
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        rulesfilesDir: /rulesfiles
      install:
        pluginsDir: /plugins
        refs:
        - falco-rules:3
        resolveDeps: true
        rulesfilesDir: /rulesfiles
    indexes:
    - name: falcosecurity
      url: https://falcosecurity.github.io/falcoctl/index.yaml
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
rules: []
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: falco-falcosidekick
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  annotations: {}
rules:
- apiGroups:
    - ""
  resources:
    - endpoints
  verbs:
    - get
---
# Source: falco/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - update
---
# Source: falco/charts/falcosidekick/templates/rbac-ui.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick-ui
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick-ui
---
# Source: falco/charts/falcosidekick/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: falco-falcosidekick
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: falco-falcosidekick
subjects:
- kind: ServiceAccount
  name: falco-falcosidekick
---
# Source: falco/templates/roleBinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: falco
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: falco
    namespace: monitoring
roleRef:
  kind: Role
  name: falco
  apiGroup: rbac.authorization.k8s.io
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
spec:
  type: ClusterIP
  ports:
    - port: 2802   
      targetPort: 2802
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/component: ui
---
# Source: falco/charts/falcosidekick/templates/service-ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/component: ui-redis
---
# Source: falco/charts/falcosidekick/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: falco-falcosidekick
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 2801
      targetPort: http
      protocol: TCP
      name: http
    - port: 2810
      targetPort: http-notls
      protocol: TCP
      name: http-notls
  selector:
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/component: core
---
# Source: falco/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco
  namespace: monitoring
  labels:
    helm.sh/chart: falco-4.20.0
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.40.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: falco
      app.kubernetes.io/instance: falco
  template:
    metadata:
      name: falco
      labels:
        app.kubernetes.io/name: falco
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: 7d8f6da18c5e64d2ca6da70a4d98876837d6d083c3f927919a133bbc950d150f
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: falco
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      containers:
        - name: falco
          image: docker.io/falcosecurity/falco:0.40.0-debian
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: true
          args:
            - /usr/bin/falco        
            - -pk
          env:
            - name: HOST_ROOT
              value: /host
            - name: FALCO_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FALCO_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          tty: false
          ports:
            - containerPort: 8765
              name: web
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          volumeMounts:
            - mountPath: /etc/falco
              name: rulesfiles-install-dir
            - mountPath: /usr/share/falco/plugins
              name: plugins-install-dir
            - mountPath: /etc/falco/config.d
              name: specialized-falco-configs
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
            - mountPath: /host/dev
              name: dev-fs
              readOnly: true
            - name: sys-fs
              mountPath: /sys/module
            - mountPath: /host/var/run/
              name: docker-socket
            - mountPath: /host/run/containerd/
              name: containerd-socket
            - mountPath: /host/run/crio/
              name: crio-socket
            - mountPath: /etc/falco/falco.yaml
              name: falco-yaml
              subPath: falco.yaml
            
        - name: falcoctl-artifact-follow
          image: docker.io/falcosecurity/falcoctl:0.11.0
          imagePullPolicy: IfNotPresent
          args:
            - artifact
            - follow
            - --log-format=json
          securityContext: {}
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
      initContainers:
        - name: falco-driver-loader
          image: docker.io/falcosecurity/falco-driver-loader:0.40.0
          imagePullPolicy: IfNotPresent
          args:
            - auto
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
              readOnly: true
            - mountPath: /host/boot
              name: boot-fs
              readOnly: true
            - mountPath: /host/lib/modules
              name: lib-modules
            - mountPath: /host/usr
              name: usr-fs
              readOnly: true
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
            - mountPath: /etc/falco/config.d
              name: specialized-falco-configs
          env:
            - name: HOST_ROOT
              value: /host
            - name: FALCOCTL_DRIVER_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FALCOCTL_DRIVER_CONFIG_CONFIGMAP
              value: falco
        - name: falcoctl-artifact-install
          image: docker.io/falcosecurity/falcoctl:0.11.0
          imagePullPolicy: IfNotPresent
          args: 
            - artifact
            - install
            - --log-format=json
          securityContext: {}
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
      volumes:
        - name: specialized-falco-configs
          emptyDir: {}
        - name: plugins-install-dir
          emptyDir: {}
        - name: rulesfiles-install-dir
          emptyDir: {}
        - name: root-falco-fs
          emptyDir: {}  
        - name: boot-fs
          hostPath:
            path: /boot
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-fs
          hostPath:
            path: /usr
        - name: etc-fs
          hostPath:
            path: /etc
        - name: dev-fs
          hostPath:
            path: /dev
        - name: sys-fs
          hostPath:
            path: /sys/module
        - name: docker-socket
          hostPath:
            path: /var/run
        - name: containerd-socket
          hostPath:
            path: /run/containerd
        - name: crio-socket
          hostPath:
            path: /run/crio
        - name: proc-fs
          hostPath:
            path: /proc
        - name: falcoctl-config-volume
          configMap: 
            name: falco-falcoctl
            items:
              - key: falcoctl.yaml
                path: falcoctl.yaml
        - name: falco-yaml
          configMap:
            name: falco
            items:
            - key: falco.yaml
              path: falco.yaml
        
  updateStrategy:
    type: RollingUpdate
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick-ui
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui
  annotations: {}
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick
      app.kubernetes.io/instance: falco
      app.kubernetes.io/component: ui
  template:
    metadata:
      labels:
        helm.sh/chart: falcosidekick-0.9.8
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/instance: falco
        app.kubernetes.io/version: "2.31.1"
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ui
    spec:
      serviceAccountName: falco-falcosidekick-ui
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      initContainers:
        - name: wait-redis
          image: "docker.io/redis/redis-stack:7.2.0-v11"
          command:
            - sh
            - -c
            - /scripts/ping-redis.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts/ping-redis.sh
              subPath: ping-redis.sh
          envFrom:
            - secretRef:
                name: falco-falcosidekick-ui
      containers:
        - name: falcosidekick-ui
          image: "docker.io/falcosecurity/falcosidekick-ui:2.2.0"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: falco-falcosidekick-ui
          args:
            - "-r"
            - falco-falcosidekick-ui-redis:6379
            - "-l"
            - info
          ports:
            - name: http
              containerPort: 2802
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {}
      volumes:
        - name: scripts
          configMap:
            name: falco-falcosidekick-ui-redis
            defaultMode: 0555
            items:
              - key: ping-redis.sh
                path: ping-redis.sh
---
# Source: falco/charts/falcosidekick/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: falco-falcosidekick
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  annotations: {}
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick
      app.kubernetes.io/instance: falco
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        helm.sh/chart: falcosidekick-0.9.8
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/instance: falco
        app.kubernetes.io/version: "2.31.1"
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: core
      annotations:
        checksum/config: 35a5ac34a8de3d0edaddc3edc081230a743624cb6b946876d39fc6211534c2af
    spec:
      serviceAccountName: falco-falcosidekick
      securityContext:
        fsGroup: 1234
        runAsUser: 1234
      containers:
        - name: falcosidekick
          image: "docker.io/falcosecurity/falcosidekick:2.31.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 2801
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: falco-falcosidekick
          env:
            - name: DEBUG
              value: "false"
            - name: CUSTOMFIELDS
              value: ""
            - name: TEMPLATEDFIELDS
              value: ""
            - name: OUTPUTFIELDFORMAT
              value: ""
            - name: BRACKETREPLACER
              value: ""
            - name: MUTUALTLSFILESPATH
              value: "/etc/certs"
            - name: MUTUALTLSCLIENT_CERTFILE
              value: ""
            - name: MUTUALTLSCLIENT_KEYFILE
              value: ""
            - name: MUTUALTLSCLIENT_CACERTFILE
              value: ""
            - name: TLSCLIENT_CACERTFILE
              value: ""
          resources:
            {}
---
# Source: falco/charts/falcosidekick/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: falco-falcosidekick-ui-redis
  namespace: monitoring
  labels:
    helm.sh/chart: falcosidekick-0.9.8
    app.kubernetes.io/name: falcosidekick
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "2.31.1"
    app.kubernetes.io/part-of: falcosidekick
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ui-redis
spec:
  replicas: 1
  serviceName: falco-falcosidekick-ui-redis
  selector:
    matchLabels:
      app.kubernetes.io/name: falcosidekick
      app.kubernetes.io/instance: falco
      app.kubernetes.io/component: ui-redis
  template:
    metadata:
      labels:
        helm.sh/chart: falcosidekick-0.9.8
        app.kubernetes.io/name: falcosidekick
        app.kubernetes.io/instance: falco
        app.kubernetes.io/version: "2.31.1"
        app.kubernetes.io/part-of: falcosidekick
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ui-redis
    spec:
      serviceAccountName: falco-falcosidekick-ui
      containers:
        - name: redis
          image: "docker.io/redis/redis-stack:7.2.0-v11"
          imagePullPolicy: IfNotPresent
          args: []
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
          - name: falco-falcosidekick-ui-redis-data
            mountPath: /data
          resources:
            {}
      
  volumeClaimTemplates:
    - metadata:
        name: falco-falcosidekick-ui-redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
